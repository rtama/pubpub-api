#%RAML 0.8
title: PubPub
documentation:
  - title: Introduction
    content: |
      The goal of this API is to give access to all of the publicly available resources on PubPub. Accessing resources or actions that require authentication will be supported soon.
      All requests and responses are in the form of application/json.
version: v1
protocols: [ HTTPS ]
baseUri: https://api.pubpub.org
mediaType: application/json
securitySchemes:
  - Basic Authentication:
      description:
        Need an Access Token granted from PubPub (Settings page) to access this API endpoint.
      describedBy:
        queryParameters:
           accessToken:
             description: provide token
             type: string
             example: 764981a8f7cb64c55e6f99fa3cf14ac69e47ff466cfd5ab76ed1b1faea97c0ed2a0f395a4348074d4aec9f9b78e7e9f1
      type: Basic Authentication
/user:
  description: |
    Routes to access data about PubPub Users
  displayName: User
  /{username}:
    get:
      description: |
        Get user data by username. The User's ID can alternatively be used instead of the username.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  userID: "980ca098189",
                  username: "username",
                  firstName: "Jane",
                  lastName: "Doe",
                  name: "Jane Doe",
                  image: "https://assets.pubpub.org/picture.jpg",
                  bio: "I am a porcupine",
                  publicEmail: "jane@doe.com",
                  github: "janeCodes",
                  orcid: "123-123-123-123",
                  twitter: "janedoe",
                  website: "http://www.example.com",
                  googleScholar: "janesGoogleURI",
                }
        404:
          body:
            application/json:
              example: |
                {
                  error : "User not found"
                }

/journal:
  description: |
    Routes to access data about PubPub Journals
  displayName: Journal
  /{slug}:
    get:
      description: |
        Get journal data by slug. The Journal's ID can alternatively be used instead of the slug.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  journalID: "980ca098189",
                  journalName: "Super Journal",
                  slug: "superjournal",
                  description: "This is some description of my journal",
                  logo: "https://assets.pubpub.org/picture.jpg",
                  icon: "https://assets.pubpub.org/picture2.jpg",
                  about: "This is a long-form description about the journal",
                  website: "www.superjournal.com",
                  twitter: "superJournal",
                  facebook: "facebookSuperJournal",
                  headerColor: "#ff0",
                  headerImage: "https://assets.pubpub.org/picture3.jpg",
                }
        404:
          body:
            application/json:
              example: |
                {
                  error : "Journal not found"
                }
    /featured:
      get:
        description: |
          Get data for all atoms featured by the journal. The Journal's ID can alternatively be used instead of the slug.
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    journalID: "980ca098189",
                    journalName: "Super Journal",
                    slug: "superjournal",
                    atoms: [
                      {
                        atomID: "56964b73849fe43d00b7d080",
                        slug: "myDocument",
                        title: "Awesome document",
                        description: "Description of awesome document",
                        previewImage: "https://assets.pubpub.org/_site/pub.png",
                        type: "document",
                        createDate: "2016-01-13T13:04:51.764Z",
                        lastUpdated: "2016-02-23T03:55:44.231Z",
                        featureDate: "Date atom was featured."
                        collections: ["Array of collections this atom has been added to"]
                      }
                    ]
                  }
          404:
            body:
              application/json:
                example: |
                  {
                    error : "Journal not found"
                  }
    /collections:
      get:
        description: |
          Get journal collection data by id. The Journal's ID can alternatively be used instead of the slug.
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    journalID: "980ca098189",
                    journalName: "Super Journal",
                    slug: "superjournal",
                    collections: [
                      {
                        collectionID: "980ca098188",
                        title: "My Collection",
                        createDate: "2016-08-08T14:21:32.977Z"
                      },
                      {
                        collectionID: "980ca098187",
                        title: "Another Collection",
                        createDate: "2016-07-08T14:21:31.977Z"
                      }
                    ]
                  }
          404:
            body:
              application/json:
                example: |
                  {
                    error : "Journal not found"
                  }
    /collection/{collectionID}:
      get:
        description: |
          Get data for all atoms in a specific collection. The Journal's ID can alternatively be used instead of the slug.
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    collectionID: "56962b72849fe43d00b7d080",
                    title: "Another Collection",
                    createDate: "2016-07-08T14:21:31.977Z",
                    atoms: [
                      {
                        atomID: "56964b73849fe43d00b7d080",
                        slug: "myDocument",
                        title: "Awesome document",
                        description: "Description of awesome document",
                        previewImage: "https://assets.pubpub.org/_site/pub.png",
                        type: "document",
                        createDate: "2016-01-13T13:04:51.764Z",
                        lastUpdated: "2016-02-23T03:55:44.231Z"
                      }
                    ]
                  }
          404:
            body:
              application/json:
                example: |
                  {
                    error : "Collection not found"
                  }
/pubs:
  description: |
    Routes to access data about Pubs
  displayName: Pubs
  /submit:
    post:
      securedBy: [Basic Authentication]
      description:
        Submit multiple documents to a journal at once.
      queryParameters:
        journals:
          description: |
            string array ["documentId1","documentId2","documentId3","documentId4"...]
          example: |
            ["12o1241kf", "G124112o", "a123bdsd1231sad"]
