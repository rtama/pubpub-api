displayName: User
description: Routes to access data about ListOfLinks Users
post:
  description: Create a new User
  body:
    application/json:
      formParameters:
        username:
          description: username of the new User to be created
          required: true
        name:
          description: name of the new User to be created
          required: true
        image:
          description: image for the new User to be created
          required: true
        email:
          description: email for the new User to be created
          required: true
        password: 
          description: a hash of the users typed password
          required: true
  responses:
    200:
      body:
        application/json:
          example: |
            {
              success: true
            }
    404:
      body:
        application/json:
          example: |
            {
              error : "User not found"
            }
put:
  description: Update the user with the given id
  body:
    application/json:
      formParameters:
        username:
          description: new username to update
        name:
          description: new name to update
        image:
          description: new image to update
        email:
          description: new email to update
        apiToken: 
            description: token used to authenticate the request.
  responses:
    200:
      body:
        application/json:
          example: |
            {
              id: "2",
              username: "janedoe",
              name: "Jane Doe",
              image: "https://assets.pubpub.org/picture.jpg",
            }
    404:
      body:
        application/json:
          example: |
            {
              error : "User not found"
            }
delete:
  description: |
    Delete the user with the given id
  body:
    application/json:
      formParameters:
        apiToken: 
            description: token used to authenticate the request.
  responses:
    200:
      body:
        application/json:
          example: |
            {
              success: true
            }
    404:
      body:
        application/json:
          example: |
            {
              error : "User not found"
            }
/{id}:
  get:
    description: |
      Get user data by id. Passing the username in as the id is also accepted.
    responses:
      200:
        body:
          application/json:
            example: |
              {
                id: "2",
                username: "janedoe",
                name: "Jane Doe",
                image: "https://assets.pubpub.org/picture.jpg",
                links: [
                  {
                    description: "My new link",
                    url: "http://www.link.com"
                  },
                  {
                    description: "Another link",
                    url: "http://www.link2.com"
                  }
                ],
                following: [
                  {
                    id: 2,
                    username: "john",
                    name: "John Micahels",
                    image: "www.myimage.com",
                    Follow: {
                      lastRead: "2016-09-07T18:06:52.655Z",
                      createdAt: "2016-09-07T18:06:52.655Z",
                      updatedAt: "2016-09-07T18:06:52.655Z",
                      follower: 1,
                      followee: 2
                    },
                    links: [
                      {
                        description: "My new link",
                        url: "http://www.link.com"
                      },
                      {
                        description: "Another link",
                        url: "http://www.link2.com"
                      }
                    ]
                  }
                ],
                followers: [
                  {
                    id: 2,
                    username: "john",
                    name: "John Micahels",
                    image: "www.myimage.com",
                    Follow: {
                      lastRead: "2016-09-07T18:06:52.655Z",
                      createdAt: "2016-09-07T18:06:52.655Z",
                      updatedAt: "2016-09-07T18:06:52.655Z",
                      follower: 2,
                      followee: 1
                    }
                  }
                ]
              }
      404:
        body:
          application/json:
            example: |
              {
                error : "User not found"
              }